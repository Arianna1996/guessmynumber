{"ast":null,"code":"var _jsxFileName = \"/Users/ariannapavan/Desktop/guessmynumber/src/components/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"../UI/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = props => {\n  _s();\n\n  const [enteredNumber, setEnteredNumber] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setEnteredValue(event.target.value);\n\n    if (enteredNumber.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n\n    props.onSubmitNumber(enteredNumber);\n    setEnteredNumber(\"\"); //dopo che aggiorno l'input diventa vuoto\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"left\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Check!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"Y5fVbIm74ELVm2kbxrMgaL4/S6U=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/ariannapavan/Desktop/guessmynumber/src/components/Input.js"],"names":["React","useState","Button","Input","props","enteredNumber","setEnteredNumber","isValid","setIsValid","formSubmitHandler","event","preventDefault","setEnteredValue","target","value","trim","length","onSubmitNumber"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMQ,iBAAiB,GAAIC,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,eAAe,CAACF,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAf;;AACA,QAAIT,aAAa,CAACU,IAAd,GAAqBC,MAArB,KAAgC,CAApC,EAAuC;AACrCR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD;;AACDJ,IAAAA,KAAK,CAACa,cAAN,CAAqBZ,aAArB;AACAC,IAAAA,gBAAgB,CAAC,EAAD,CAAhB,CARmC,CAQb;AACvB,GATD;;AAWA,sBACE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEG,iBAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAvBD;;GAAMN,K;;KAAAA,K;AAyBN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"../UI/Button\";\n\nconst Input = (props) => {\n  const [enteredNumber, setEnteredNumber] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    setEnteredValue(event.target.value);\n    if (enteredNumber.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n    props.onSubmitNumber(enteredNumber);\n    setEnteredNumber(\"\"); //dopo che aggiorno l'input diventa vuoto\n  };\n\n  return (\n    <section className=\"left\">\n      <form onSubmit={formSubmitHandler}>\n        <input type=\"number\" className=\"guess\" />\n        <Button type={\"submit\"}>Check!</Button>\n      </form>\n    </section>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}