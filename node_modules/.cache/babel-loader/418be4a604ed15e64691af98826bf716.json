{"ast":null,"code":"var _jsxFileName = \"/Users/ariannapavan/Desktop/guessmynumber/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"./UI/Button\";\nimport BoxNumber from \"./components/BoxNumber\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [finalNumber, setFinalNumber] = useState(\"\");\n  const [score, setScore] = useState(20);\n  const [highScore, setHighScore] = useState(0);\n  const [enableButton, setEnableButton] = useState(true);\n  const [randomNumber, setRandomNumber] = useState(Math.round(Math.random() * 20));\n\n  const insertNumber = number => {\n    setFinalNumber(number);\n\n    if (number != randomNumber) {\n      setScore(prevState => prevState - 1);\n    } else {\n      setHighScore(prevState => {\n        if (prevState > score) {\n          setHighScore(prevState);\n        } else {\n          setHighScore(score);\n        }\n      });\n    }\n  };\n\n  const refresh = () => {\n    setScore(20);\n    setRandomNumber(Math.round(Math.random() * 20));\n    setFinalNumber(\"\");\n  };\n\n  console.log(finalNumber);\n  console.log(randomNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: finalNumber == randomNumber ? \"#60b347\" : \"#222\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Guess My Number!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"between\",\n        children: \"(Between 1 and 20)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: refresh,\n        className: \"btn again\",\n        children: \"Again!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BoxNumber, {\n        randomNumber: randomNumber,\n        finalNumber: finalNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        onSubmitNumber: insertNumber,\n        score: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        random: randomNumber,\n        final: finalNumber,\n        score: score,\n        highScore: highScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gSQ41KlaQXfSof2/e3tezhxYRhQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ariannapavan/Desktop/guessmynumber/src/App.js"],"names":["React","useState","Button","BoxNumber","Message","Input","App","finalNumber","setFinalNumber","score","setScore","highScore","setHighScore","enableButton","setEnableButton","randomNumber","setRandomNumber","Math","round","random","insertNumber","number","prevState","refresh","console","log","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAC9CgB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAD8C,CAAhD;;AAIA,QAAMC,YAAY,GAAIC,MAAD,IAAY;AAC/Bb,IAAAA,cAAc,CAACa,MAAD,CAAd;;AACA,QAAIA,MAAM,IAAIN,YAAd,EAA4B;AAC1BL,MAAAA,QAAQ,CAAEY,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAR;AACD,KAFD,MAEO;AACLV,MAAAA,YAAY,CAAEU,SAAD,IAAe;AAC1B,YAAIA,SAAS,GAAGb,KAAhB,EAAuB;AACrBG,UAAAA,YAAY,CAACU,SAAD,CAAZ;AACD,SAFD,MAEO;AACLV,UAAAA,YAAY,CAACH,KAAD,CAAZ;AACD;AACF,OANW,CAAZ;AAOD;AACF,GAbD;;AAeA,QAAMc,OAAO,GAAG,MAAM;AACpBb,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAM,IAAAA,eAAe,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAf;AACAX,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAJD;;AAMAgB,EAAAA,OAAO,CAACC,GAAR,CAAYlB,WAAZ;AACAiB,EAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AACA,sBACE;AACE,IAAA,KAAK,EAAE;AACLW,MAAAA,eAAe,EAAEnB,WAAW,IAAIQ,YAAf,GAA8B,SAA9B,GAA0C;AADtD,KADT;AAAA,4BAKE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEQ,OAAjB;AAA0B,QAAA,SAAS,EAAE,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAME,QAAC,SAAD;AAAW,QAAA,YAAY,EAAER,YAAzB;AAAuC,QAAA,WAAW,EAAER;AAApD;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAaE;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,cAAc,EAAEa,YAAvB;AAAqC,QAAA,KAAK,EAAEX;AAA5C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AACE,QAAA,MAAM,EAAEM,YADV;AAEE,QAAA,KAAK,EAAER,WAFT;AAGE,QAAA,KAAK,EAAEE,KAHT;AAIE,QAAA,SAAS,EAAEE;AAJb;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAzDQL,G;;KAAAA,G;AA2DT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"./UI/Button\";\nimport BoxNumber from \"./components/BoxNumber\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\n\nfunction App() {\n  const [finalNumber, setFinalNumber] = useState(\"\");\n  const [score, setScore] = useState(20);\n  const [highScore, setHighScore] = useState(0);\n  const [enableButton, setEnableButton] = useState(true);\n  const [randomNumber, setRandomNumber] = useState(\n    Math.round(Math.random() * 20)\n  );\n\n  const insertNumber = (number) => {\n    setFinalNumber(number);\n    if (number != randomNumber) {\n      setScore((prevState) => prevState - 1);\n    } else {\n      setHighScore((prevState) => {\n        if (prevState > score) {\n          setHighScore(prevState);\n        } else {\n          setHighScore(score);\n        }\n      });\n    }\n  };\n\n  const refresh = () => {\n    setScore(20);\n    setRandomNumber(Math.round(Math.random() * 20));\n    setFinalNumber(\"\");\n  };\n\n  console.log(finalNumber);\n  console.log(randomNumber);\n  return (\n    <div\n      style={{\n        backgroundColor: finalNumber == randomNumber ? \"#60b347\" : \"#222\",\n      }}\n    >\n      <header>\n        <h1>Guess My Number!</h1>\n        <p className=\"between\">(Between 1 and 20)</p>\n        <Button onClick={refresh} className={\"btn again\"}>\n          Again!\n        </Button>\n        <BoxNumber randomNumber={randomNumber} finalNumber={finalNumber} />\n      </header>\n      <main>\n        <Input onSubmitNumber={insertNumber} score={score} />\n        <Message\n          random={randomNumber}\n          final={finalNumber}\n          score={score}\n          highScore={highScore}\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}