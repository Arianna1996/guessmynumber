{"ast":null,"code":"var _jsxFileName = \"/Users/ariannapavan/Desktop/guessmynumber/src/components/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"../UI/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = props => {\n  _s();\n\n  const [enteredNumber, setEnteredNumber] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (!props.buttonState) {\n      return false;\n    } else {\n      if (enteredNumber.trim().length == 0 || enteredNumber < 1 || enteredNumber > 20) {\n        setIsValid(false);\n        return;\n      }\n\n      props.onSubmitNumber(enteredNumber);\n      setEnteredNumber(\"\");\n    }\n  };\n\n  const numberInputHandler = event => {\n    if (event.target.value.trim().length > 0 && enteredNumber < 1 && enteredNumber > 20) {\n      setIsValid(true);\n    }\n\n    setEnteredNumber(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"left\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"guess\",\n        onChange: numberInputHandler,\n        value: enteredNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: `btn check ${!props.buttonState || !isValid ? \"disable\" : \"\"}`,\n        type: \"submit\",\n        children: \"Check!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"Y5fVbIm74ELVm2kbxrMgaL4/S6U=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/ariannapavan/Desktop/guessmynumber/src/components/Input.js"],"names":["React","useState","Button","Input","props","enteredNumber","setEnteredNumber","isValid","setIsValid","formSubmitHandler","event","preventDefault","buttonState","trim","length","onSubmitNumber","numberInputHandler","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMQ,iBAAiB,GAAIC,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI,CAACP,KAAK,CAACQ,WAAX,EAAwB;AACtB,aAAO,KAAP;AACD,KAFD,MAEO;AACL,UACEP,aAAa,CAACQ,IAAd,GAAqBC,MAArB,IAA+B,CAA/B,IACAT,aAAa,GAAG,CADhB,IAEAA,aAAa,GAAG,EAHlB,EAIE;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD;;AACDJ,MAAAA,KAAK,CAACW,cAAN,CAAqBV,aAArB;AACAC,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD;AACF,GAhBD;;AAkBA,QAAMU,kBAAkB,GAAIN,KAAD,IAAW;AACpC,QACEA,KAAK,CAACO,MAAN,CAAaC,KAAb,CAAmBL,IAAnB,GAA0BC,MAA1B,GAAmC,CAAnC,IACAT,aAAa,GAAG,CADhB,IAEAA,aAAa,GAAG,EAHlB,EAIE;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AACDF,IAAAA,gBAAgB,CAACI,KAAK,CAACO,MAAN,CAAaC,KAAd,CAAhB;AACD,GATD;;AAWA,sBACE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAET,iBAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,QAAA,QAAQ,EAAEO,kBAHZ;AAIE,QAAA,KAAK,EAAEX;AAJT;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,MAAD;AACE,QAAA,SAAS,EAAG,aACV,CAACD,KAAK,CAACQ,WAAP,IAAsB,CAACL,OAAvB,GAAiC,SAAjC,GAA6C,EAC9C,EAHH;AAIE,QAAA,IAAI,EAAE,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CArDD;;GAAMJ,K;;KAAAA,K;AAuDN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"../UI/Button\";\n\nconst Input = (props) => {\n  const [enteredNumber, setEnteredNumber] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    if (!props.buttonState) {\n      return false;\n    } else {\n      if (\n        enteredNumber.trim().length == 0 ||\n        enteredNumber < 1 ||\n        enteredNumber > 20\n      ) {\n        setIsValid(false);\n        return;\n      }\n      props.onSubmitNumber(enteredNumber);\n      setEnteredNumber(\"\");\n    }\n  };\n\n  const numberInputHandler = (event) => {\n    if (\n      event.target.value.trim().length > 0 &&\n      enteredNumber < 1 &&\n      enteredNumber > 20\n    ) {\n      setIsValid(true);\n    }\n    setEnteredNumber(event.target.value);\n  };\n\n  return (\n    <section className=\"left\">\n      <form onSubmit={formSubmitHandler}>\n        <input\n          type=\"number\"\n          className=\"guess\"\n          onChange={numberInputHandler}\n          value={enteredNumber}\n        />\n        <Button\n          className={`btn check ${\n            !props.buttonState || !isValid ? \"disable\" : \"\"\n          }`}\n          type={\"submit\"}\n        >\n          Check!\n        </Button>\n      </form>\n    </section>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}